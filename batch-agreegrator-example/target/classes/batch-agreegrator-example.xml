<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
    <file:connector name="File" outputPattern="id.csv" writeToDirectory="D:\mule\output" readFromDirectory="D:\mule\input" workDirectory="D:\mule\work" autoDelete="false" streaming="true" validateConnections="true" doc:name="File"/>
    <flow name="batch-agreegrator-exampleFlow" processingStrategy="synchronous">
        <file:inbound-endpoint path="D:\mule\input" responseTimeout="10000" doc:name="File" metadata:id="79a063b3-954c-453e-9ed2-3393da781ecf" fileAge="5000" moveToDirectory="D:\mule\work" pollingFrequency="10000">
            <file:filename-regex-filter pattern="id.csv" caseSensitive="true"/>
        </file:inbound-endpoint>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map {
	employeeid:$.id,
	employeename:$.name,
	employeeaddress:$.address
}]]></dw:set-payload>
        </dw:transform-message>

        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <batch:execute name="batch-agreegrator-exampleBatch" doc:name="Batch Execute"/>
        <exception-strategy ref="batch-agreegrator-exampleChoice_Exception_Strategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <choice-exception-strategy name="batch-agreegrator-exampleChoice_Exception_Strategy">
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger message="#[message.exception.getMessage()]" level="INFO" doc:name="Logger"/>
        </catch-exception-strategy>
    </choice-exception-strategy>
    <batch:job name="batch-agreegrator-exampleBatch" max-failed-records="-1" >
        <batch:input>
            <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        </batch:input>
        <batch:process-records>
            <batch:step name="Batch_Step1">
                <batch:commit size="10" doc:name="Batch Commit">
                    <dw:transform-message doc:name="Transform Message">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---

payload]]></dw:set-payload>
                    </dw:transform-message>
                    <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                    <file:outbound-endpoint path="D:\mule\output" outputPattern="myfile_#[System.nanoTime()]_#[System.nanoTime()].json" responseTimeout="10000" doc:name="File"/>
                    
                </batch:commit>

            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <logger message="#['Batch Processing Result: Loaded:'+ payload.loadedRecords + ', successful: '+ payload.successfulRecords + ', failed: '+ payload.failedRecords]" level="INFO" doc:name="Logger"/>
        </batch:on-complete>
    </batch:job>
</mule>
